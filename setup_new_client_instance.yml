---
-   hosts: aspace_instances
    gather_facts: True         
    become: yes
    vars:
      awslogs_basename: aspace
      dir_role_templates: roles/upgrade_aspace_software/templates
      dir_dep_role_templates: roles/upgrade_aspace_software/templates
    pre_tasks:
    - fail: msg='Need to set client name by adding --extra-vars "client_name=<new client name>" to ansible-playbook call'
      when: client_name == None
    - debug: var=url_jdbc_base
    - debug: msg="MYSQL PASSWORD FOR {{ client_name }} -- {{ client_db_password }}"
    - name: include vaulted auth info
      include_vars: all_secrets.yml
      tags: monit
    - name: include client specific vars
      include_vars:  "host_vars/{{ client_name }}.yml"
    - name: install monit
      yum:
        name: monit
        state: present
      tags: monit
    - name: create monit monitor for client
      template: src=templates/aspace.monitrc.j2 dest=/etc/monit.d/aspace.monitrc
      tags: monit
    - name: install java 8
      yum:
        name: java-1.8.0-openjdk
        state: present
    - name: update java path
      alternatives:
        name: java
        path: /usr/lib/jvm/jre-1.8.0-openjdk.x86_64/bin/java
    - name: install sysstat
      yum:
        name: sysstat
        state: present
      tags: sysstat
    - name: install htop
      yum:
        name: htop
        state: present
      tags: htop
    - name: install logrotate (should already be installed)
      yum:
        name: logrotate
        state: present
    - name: set monit to run on startup
      shell: chkconfig monit on
      tags: monit
    - name: put monit conf with http access in place
      template:
        src: templates/monit.conf.j2
        dest: /etc/monit.conf
        mode: 0600
        force: yes
      tags: monit
    - name: create client user for running software at lower level of privilege
      user:
        name: "{{ client_name }}"
        state: present
    - name: set java memory sizes
      template:
        src: client_bashrc
        dest: ~/.bashrc
      become: true
      become_user: "{{ client_name }}"
#    - name: create swap file
#      command: dd if=/dev/zero of={{ swap_file_path }} bs=500M count=8
#               creates="{{ swap_file_path }}"
#    - name: change swap file permissions
#      file: path="{{ swap_file_path }}"
#            owner=root
#            group=root
#            mode=0600
#    - name: check swap file type
#      command: file {{ swap_file_path }}
#      register: swapfile
#    - name: make swap file
#      command: mkswap {{ swap_file_path }}
#      when: swapfile.stdout.find('swap file') == -1
#    - name: write swap entry in fstab
#      mount: name=none
#             src={{ swap_file_path }}
#             fstype=swap
#             opts=sw
#             passno=0
#             dump=0
#             state=present
#    - name: mount swap
#      command: "swapon {{ swap_file_path }}"

    roles:
    - { role: mredar.nightly_security_update_yum, tags: security-up }
    - { role: create_client_mysqldb, tags: create-db , delegate_to: 127.0.0.1 }
    - { role: upgrade_aspace_software, tags: setup-software, become_user: "{{ client_name }}" }
    - { role: setup_awslogs, tags: awslogs }

    post_tasks:
    - name: put logrotate for client aspace log in place
      template:
        src: templates/logrotate.conf.j2
        dest: /etc/logrotate.d/aspace
    - name: reload monit
      command: monit reload
      tags: monit
    - pause: seconds=10
    - name: start aspace from monit
      command: monit start aspace
      tags: monit
    - wait_for: port=8081 timeout=10 delay=900 search_regex=Archive
